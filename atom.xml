<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dizent</title>
  
  <subtitle>千头万绪君不知,来年柳绿故人迟.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zone.dizent.cn/"/>
  <updated>2020-05-09T01:53:23.152Z</updated>
  <id>http://zone.dizent.cn/</id>
  
  <author>
    <name>Dizent</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>日语五十音</title>
    <link href="http://zone.dizent.cn/2020/03/12/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%94%E5%8D%81%E9%9F%B3/"/>
    <id>http://zone.dizent.cn/2020/03/12/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%94%E5%8D%81%E9%9F%B3/</id>
    <published>2020-03-12T01:01:00.000Z</published>
    <updated>2020-05-09T01:53:23.152Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="日语五十音"><a href="#日语五十音" class="headerlink" title="日语五十音"></a>日语五十音</h2><p>表格按照田字格形式，标注了五十音</p><p>各位置分别为：</p><table><thead><tr><th>平假名</th><th>片假名</th></tr></thead><tbody><tr><td>键盘输入方式</td><td>罗马音</td></tr></tbody></table><table><thead><tr><th style="text-align:center">あ</th><th style="text-align:center">ア</th><th style="text-align:center">い</th><th style="text-align:center">イ</th><th style="text-align:center">う</th><th style="text-align:center">ウ</th><th style="text-align:center">え</th><th style="text-align:center">エ</th><th style="text-align:center">お</th><th style="text-align:center">オ</th></tr></thead><tbody><tr><td style="text-align:center">a</td><td style="text-align:center">[a]</td><td style="text-align:center">i</td><td style="text-align:center">[i]</td><td style="text-align:center">u</td><td style="text-align:center">[u]</td><td style="text-align:center">e</td><td style="text-align:center">[e]</td><td style="text-align:center">o</td><td style="text-align:center">[o]</td></tr><tr><td style="text-align:center">か</td><td style="text-align:center">カ</td><td style="text-align:center">き</td><td style="text-align:center">キ</td><td style="text-align:center">く</td><td style="text-align:center">ク</td><td style="text-align:center">け</td><td style="text-align:center">ケ</td><td style="text-align:center">こ</td><td style="text-align:center">コ</td></tr><tr><td style="text-align:center">ka</td><td style="text-align:center">[ka]</td><td style="text-align:center">ki</td><td style="text-align:center">[ki]</td><td style="text-align:center">ku</td><td style="text-align:center">[ku]</td><td style="text-align:center">ke</td><td style="text-align:center">[ke]</td><td style="text-align:center">ko</td><td style="text-align:center">[ko]</td></tr><tr><td style="text-align:center">さ</td><td style="text-align:center">サ</td><td style="text-align:center">し</td><td style="text-align:center">シ</td><td style="text-align:center">す</td><td style="text-align:center">ス</td><td style="text-align:center">せ</td><td style="text-align:center">セ</td><td style="text-align:center">そ</td><td style="text-align:center">ソ</td></tr><tr><td style="text-align:center">sa</td><td style="text-align:center">[sa]</td><td style="text-align:center">shi</td><td style="text-align:center">[xi]</td><td style="text-align:center">su</td><td style="text-align:center">[su]</td><td style="text-align:center">se</td><td style="text-align:center">[sei]</td><td style="text-align:center">so</td><td style="text-align:center">[so]</td></tr><tr><td style="text-align:center">た</td><td style="text-align:center">タ</td><td style="text-align:center">ち</td><td style="text-align:center">チ</td><td style="text-align:center">つ</td><td style="text-align:center">ツ</td><td style="text-align:center">て</td><td style="text-align:center">テ</td><td style="text-align:center">と</td><td style="text-align:center">ト</td></tr><tr><td style="text-align:center">ta</td><td style="text-align:center">[ta]</td><td style="text-align:center">chi</td><td style="text-align:center">[qi]</td><td style="text-align:center">tsu</td><td style="text-align:center">[tsu]</td><td style="text-align:center">te</td><td style="text-align:center">[tei]</td><td style="text-align:center">to</td><td style="text-align:center">[to]</td></tr><tr><td style="text-align:center">な</td><td style="text-align:center">ナ</td><td style="text-align:center">に</td><td style="text-align:center">ニ</td><td style="text-align:center">ぬ</td><td style="text-align:center">ヌ</td><td style="text-align:center">ね</td><td style="text-align:center">ネ</td><td style="text-align:center">の</td><td style="text-align:center">ノ</td></tr><tr><td style="text-align:center">na</td><td style="text-align:center">[na]</td><td style="text-align:center">ni</td><td style="text-align:center">[ni]</td><td style="text-align:center">nu</td><td style="text-align:center">[nu]</td><td style="text-align:center">ne</td><td style="text-align:center">[nei]</td><td style="text-align:center">no</td><td style="text-align:center">[no]</td></tr><tr><td style="text-align:center">は</td><td style="text-align:center">ハ</td><td style="text-align:center">ひ</td><td style="text-align:center">ヒ</td><td style="text-align:center">ふ</td><td style="text-align:center">フ</td><td style="text-align:center">へ</td><td style="text-align:center">ヘ</td><td style="text-align:center">ほ</td><td style="text-align:center">ホ</td></tr><tr><td style="text-align:center">ha</td><td style="text-align:center">[ha]</td><td style="text-align:center">hi</td><td style="text-align:center">[hii]</td><td style="text-align:center">hu</td><td style="text-align:center">[hu]</td><td style="text-align:center">he</td><td style="text-align:center">[hei]</td><td style="text-align:center">ho</td><td style="text-align:center">[o]</td></tr><tr><td style="text-align:center">ま</td><td style="text-align:center">マ</td><td style="text-align:center">み</td><td style="text-align:center">ミ</td><td style="text-align:center">む</td><td style="text-align:center">ム</td><td style="text-align:center">め</td><td style="text-align:center">メ</td><td style="text-align:center">も</td><td style="text-align:center">モ</td></tr><tr><td style="text-align:center">ma</td><td style="text-align:center">[ma]</td><td style="text-align:center">mi</td><td style="text-align:center">[mi]</td><td style="text-align:center">mu</td><td style="text-align:center">[mu]</td><td style="text-align:center">me</td><td style="text-align:center">[mei]</td><td style="text-align:center">mo</td><td style="text-align:center">[mo]</td></tr><tr><td style="text-align:center">や</td><td style="text-align:center">ヤ</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">ゆ</td><td style="text-align:center">ユ</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">よ</td><td style="text-align:center">ヨ</td></tr><tr><td style="text-align:center">ya</td><td style="text-align:center">[ya]</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">yu</td><td style="text-align:center">[you]</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">yo</td><td style="text-align:center">[yo]</td></tr><tr><td style="text-align:center">ら</td><td style="text-align:center">ラ</td><td style="text-align:center">り</td><td style="text-align:center">リ</td><td style="text-align:center">る</td><td style="text-align:center">ル</td><td style="text-align:center">れ</td><td style="text-align:center">レ</td><td style="text-align:center">ろ</td><td style="text-align:center">ロ</td></tr><tr><td style="text-align:center">ra</td><td style="text-align:center">[ra]</td><td style="text-align:center">ri</td><td style="text-align:center">[li]</td><td style="text-align:center">ru</td><td style="text-align:center">[lu]</td><td style="text-align:center">re</td><td style="text-align:center">[lei]</td><td style="text-align:center">ro</td><td style="text-align:center">[lo]</td></tr><tr><td style="text-align:center">わ</td><td style="text-align:center">ワ</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">を</td><td style="text-align:center">ヲ</td></tr><tr><td style="text-align:center">wa</td><td style="text-align:center">[wa]</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">wo</td><td style="text-align:center">[wo]</td></tr><tr><td style="text-align:center">ん</td><td style="text-align:center">ン</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">nn</td><td style="text-align:center">[n]</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="日语学习" scheme="http://zone.dizent.cn/tags/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>免费影视站点分享</title>
    <link href="http://zone.dizent.cn/2020/03/12/%E5%85%8D%E8%B4%B9%E5%BD%B1%E8%A7%86%E7%AB%99%E7%82%B9%E5%88%86%E4%BA%AB/"/>
    <id>http://zone.dizent.cn/2020/03/12/%E5%85%8D%E8%B4%B9%E5%BD%B1%E8%A7%86%E7%AB%99%E7%82%B9%E5%88%86%E4%BA%AB/</id>
    <published>2020-03-12T01:01:00.000Z</published>
    <updated>2020-04-26T06:17:31.723Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="综合影视站"><a href="#综合影视站" class="headerlink" title="综合影视站"></a>综合影视站</h2><ul><li><span style="color:orangered;font-weight:bold;">星辰影院：</span><a href="http://dy.luc9.com/" target="_blank" rel="noopener">点击查看（如报错，可复制到浏览器中打开）</a></li><li><span style="color:orangered;font-weight:bold;">5G影院：</span><a href="https://www.5g5.cc/" target="_blank" rel="noopener">点击查看（如报错，可复制到浏览器中打开）</a></li></ul><h2 id="vip视频解析"><a href="#vip视频解析" class="headerlink" title="vip视频解析"></a>vip视频解析</h2><blockquote><p>复制VIP视频地址，到网站中解析观看。</p><ul><li><span style="color:orangered;font-weight:bold;">全民解析：</span><a href="http://www.qmaile.com/" target="_blank" rel="noopener">点击查看（如报错，可复制到浏览器中打开）</a></li></ul></blockquote><h2 id="视频下载"><a href="#视频下载" class="headerlink" title="视频下载"></a>视频下载</h2><ul><li><span style="color:orangered;font-weight:bold;">最大资源网：</span><a href="http://www.zuidazy2.net/" target="_blank" rel="noopener">点击查看（如报错，可复制到浏览器中打开）</a></li></ul><h2 id="网盘搜索"><a href="#网盘搜索" class="headerlink" title="网盘搜索"></a>网盘搜索</h2><blockquote><p>搜索网盘中别人共享的资源</p></blockquote><ul><li><span style="color:orangered;font-weight:bold;">小不点搜索：</span><a href="https://www.xiaoso.net/" target="_blank" rel="noopener">点击查看（如报错，可复制到浏览器中打开）</a></li></ul><h2 id="动漫"><a href="#动漫" class="headerlink" title="动漫"></a>动漫</h2><ul><li><span style="color:orangered;font-weight:bold;">B站：</span><a href="http://www.bilibili.com/" target="_blank" rel="noopener">点击查看（如报错，可复制到浏览器中打开）</a></li><li><span style="color:orangered;font-weight:bold;">D站：</span><a href="http://www.dilidili.one/" target="_blank" rel="noopener">点击查看（如报错，可复制到浏览器中打开）</a></li></ul><blockquote><ul><li>列表会不断更新，如遇链接无法打开，请留言联系我。</li><li>网站列表收集自网络，如有侵权，请联系删除</li></ul></blockquote><p>关注我，获取更多。<br><img src="https://imgkr.cn-bj.ufileos.com/ab79fcbf-7bbf-4f69-a8d1-44e2fbd6446e.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="薅羊毛" scheme="http://zone.dizent.cn/tags/%E8%96%85%E7%BE%8A%E6%AF%9B/"/>
    
  </entry>
  
  <entry>
    <title>使用coding持续集成部署springboot项目到服务器</title>
    <link href="http://zone.dizent.cn/2020/02/21/%E4%BD%BF%E7%94%A8coding%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2springboot%E9%A1%B9%E7%9B%AE%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://zone.dizent.cn/2020/02/21/%E4%BD%BF%E7%94%A8coding%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2springboot%E9%A1%B9%E7%9B%AE%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2020-02-21T06:01:00.000Z</published>
    <updated>2020-05-09T01:46:44.232Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="准备条件："><a href="#准备条件：" class="headerlink" title="准备条件："></a>准备条件：</h2><ol><li>本地可运行的springboot项目，本文以Maven项目为例，构建打包均使用Maven命令</li><li>拥有服务器的私钥</li><li>拥有push权限的coding账号和本地可以成功push代码到coding</li><li>能理解基础的git、mvn、shell脚本命令</li></ol><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><h3 id="将代码推送到coding仓库"><a href="#将代码推送到coding仓库" class="headerlink" title="将代码推送到coding仓库"></a>将代码推送到coding仓库</h3><ol><li><p>新建一个coding仓库，项目模板选择<code>DevOps</code></p></li><li><p>项目名称自选，例如“范例”，其他均为默认，Git仓库（下方多选框不选）</p></li><li><p>进入项目<code>代码仓库</code>，复制git地址。<code>https://e.coding.net/dizent/fanli.git</code></p></li><li><p>进入本地项目目录，使用命令行将代码推送至仓库。</p><pre><code class="shell">cd 项目目录git initgit remote add origin https://e.coding.net/dizent/fanli.git #替换为你的仓库地址git add .git commit -m &quot;项目初始化&quot;git push origin master</code></pre></li><li><p>查看仓库中是否已有代码，即操作成功<br><img src="https://imgkr.cn-bj.ufileos.com/3815a1be-be89-4c67-b0c1-20f8e2bad3f8.png" alt="image-20200221111026550"></p></li></ol><h3 id="构建配置"><a href="#构建配置" class="headerlink" title="构建配置"></a>构建配置</h3><h4 id="新的构建计划"><a href="#新的构建计划" class="headerlink" title="新的构建计划"></a>新的构建计划</h4><ol><li>选择项目左侧菜单栏<code>构建与部署</code> –&gt;<code>构建</code></li><li>在内容区域选择<code>新建构建配置</code></li><li>输入<code>计划名称</code>，代码源选择<code>coding</code>、仓库选需要构建的仓库</li><li>配置来源<code>使用静态配置的JenkinsFile</code>–&gt;<code>并行过程模板</code></li><li>勾选<code>前往流程配置</code>，点击<code>保存修改</code><h4 id="流程配置"><a href="#流程配置" class="headerlink" title="流程配置"></a>流程配置</h4></li><li>选择<code>文本编辑器</code></li><li>配置解读</li></ol><blockquote><p>配置采用pipeline</p><p>默认环境下需要添加<code>agent any</code> ，表示“在 CODING 提供的云主机上执行 Pipeline 或 stage”</p><p>构建步骤将在<code>stages</code>下分布进行，每个子<code>stage</code>都代表一个阶段</p></blockquote><h4 id="阶段配置"><a href="#阶段配置" class="headerlink" title="阶段配置"></a>阶段配置</h4><ul><li><strong>检出</strong>：</li></ul><pre><code class="shell">  stage(&#39;检出&#39;) {        steps {          checkout([$class: &#39;GitSCM&#39;, branches: [[name: env.GIT_BUILD_REF]],                   userRemoteConfigs: [[url: env.GIT_REPO_URL, credentialsId: env.CREDENTIALS_ID]]])        }      }</code></pre><blockquote><p>在仓库检出，此阶段配置无需改动，都默认为上一步构建计划的参数</p></blockquote><ul><li><strong>构建</strong></li></ul><pre><code class="json">  stage(&#39;构建&#39;) {        steps {          echo &#39;构建中...&#39;          sh &#39;java -version&#39;          sh &#39;mvn package&#39;          echo &#39;构建完成.&#39;          archiveArtifacts(artifacts: &#39;**/target/*.jar&#39;, fingerprint: true)        }      }</code></pre><blockquote><ol><li>echo为输出信息，不作其他解释</li><li>检查Java版本</li><li>Maven打包，打包在项目路径的<code>../target/*.jar</code></li><li>收集打包后的文件</li></ol></blockquote><ul><li><strong>测试</strong></li></ul><pre><code class="json">  stage(&#39;测试&#39;) {        steps {          echo &#39;单元测试中...&#39;          sh &#39;mvn test&#39;          echo &#39;单元测试完成.&#39;        }      }</code></pre><blockquote><p>执行Maven测试，测试test包下的代码</p></blockquote><ul><li><strong>部署</strong></li></ul><pre><code class="json">  stage(&#39;部署&#39;) {        steps {          echo &#39;部署中...&#39;          script {            def remote = [:]            remote.name = &#39;web-server&#39;            remote.allowAnyHosts = true            remote.host = &#39;服务器ip地址&#39;            remote.user = &#39;服务器用户名&#39;            // 需要先创建一对 SSH 密钥，把私钥放在 CODING 凭据管理，把公钥放在服务器的 `.ssh/authorized_keys`，实现免密码登录            withCredentials([sshUserPrivateKey(credentialsId: &quot;057*****-****-****-****-*******16f0a&quot;, keyFileVariable: &#39;id_rsa&#39;)]) {              remote.identityFile = id_rsa              // SSH 上传文件到远端服务器 “fanli-0.0.1-SNAPSHOT.jar”是生成的jar文件，into后是服务器端的目录              sshPut remote: remote, from: &#39;target/fanli-0.0.1-SNAPSHOT.jar&#39;, into: &#39;/usr/local/java&#39;              // 重启 服务器。在服务器端编写“deploy.sh”脚本进行项目启动控制              sshCommand remote: remote, sudo: true, command: &quot;sh /usr/local/java/deploy.sh restart&quot;            }            echo &#39;部署完成&#39;          }</code></pre><blockquote><ol><li>在script中编写提交到服务器的脚本</li><li>配置服务器的ssh密钥，并导入coding凭据。相关操作见<a href="https://help.coding.net/docs/devops/ci/credential.html" target="_blank" rel="noopener">coding使用凭证进行认证</a></li><li>上传文件到服务器</li><li>运行服务器端的脚本<code>deploy.sh</code></li><li><code>deploy.sh</code>脚本内容如下</li></ol><pre><code class="shell">#!/bin/sh## java 环境export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.232.b09-0.el7_7.x86_64## jre环境export JRE_HOME=$JAVA_HOME/jre## jar包推送路径export RUN_PATH=/usr/local/java## jar包名字API_NAME=fanli-0.0.1-SNAPSHOTJAR_NAME=$API_NAME\.jar#PID  代表是PID文件PID=$RUN_PATH/$API_NAME\.pid#使用说明，用来提示输入参数usage() {    echo &quot;Usage: sh 执行脚本.sh [start|stop|restart|status]&quot;    exit 1}#检查程序是否在运行is_exist(){  pid=`ps -ef|grep $JAR_NAME|grep -v grep|awk &#39;{print $2}&#39; `  #如果不存在返回1，存在返回0       if [ -z &quot;${pid}&quot; ]; then   return 1  else    return 0  fi}#启动方法start(){  is_exist  if [ $? -eq &quot;0&quot; ]; then     echo &quot;&gt;&gt;&gt; ${JAR_NAME} is already running PID=${pid} &lt;&lt;&lt;&quot;   else     nohup $JRE_HOME/bin/java -Xms256m -Xmx512m -jar $RUN_PATH/$JAR_NAME &gt; $RUN_PATH/fanli.out &amp;    echo $! &gt; $PID    echo &quot;&gt;&gt;&gt; start $JAR_NAME successed PID=$! &lt;&lt;&lt;&quot;    fi  }#停止方法stop(){  #is_exist  pidf=$(cat $PID)  #echo &quot;$pidf&quot;    echo &quot;&gt;&gt;&gt; api PID = $pidf begin kill $pidf &lt;&lt;&lt;&quot;  kill $pidf  rm -rf $PID  sleep 2  is_exist  if [ $? -eq &quot;0&quot; ]; then     echo &quot;&gt;&gt;&gt; api 2 PID = $pid begin kill -9 $pid  &lt;&lt;&lt;&quot;    kill -9  $pid    sleep 2    echo &quot;&gt;&gt;&gt; $JAR_NAME process stopped &lt;&lt;&lt;&quot;    else    echo &quot;&gt;&gt;&gt; ${JAR_NAME} is not running &lt;&lt;&lt;&quot;  fi  }#输出运行状态status(){  is_exist  if [ $? -eq &quot;0&quot; ]; then    echo &quot;&gt;&gt;&gt; ${JAR_NAME} is running PID is ${pid} &lt;&lt;&lt;&quot;  else    echo &quot;&gt;&gt;&gt; ${JAR_NAME} is not running &lt;&lt;&lt;&quot;  fi}#重启restart(){  stop  start}#根据输入参数，选择执行对应方法，不输入则执行使用说明case &quot;$1&quot; in  &quot;start&quot;)    start    ;;  &quot;stop&quot;)    stop    ;;  &quot;status&quot;)    status    ;;  &quot;restart&quot;)    restart    ;;  *)    usage    ;;esacexit 0</code></pre></blockquote><ul><li>触发规则<ul><li>选择自己需要的出发规则：例如，代码更新时执行，当执行<code>git push</code>之后，构建进行将执行</li></ul></li><li>变量与缓存<ul><li>可以将上方用到的变量使用变量配置，即可多项目使用</li><li>缓存目录：<code>项目目录</code> <code>Maven</code>打开</li></ul></li><li>通知提醒<ul><li>选择在构建时开启邮件提醒，并选择成员</li></ul></li></ul><h3 id="开始构建"><a href="#开始构建" class="headerlink" title="开始构建"></a>开始构建</h3><p>所有配置完成之后，即可点击<code>开始构建</code> ，可以查看构建进度。</p><p><img src="https://imgkr.cn-bj.ufileos.com/48cd2c14-5784-49cf-bdb5-7b819a3c41b3.png" alt="image-20200221125446930"></p><blockquote><p>参考文章：</p><ol><li><a href="https://help.coding.net/docs/devops/ci/deployment.html#%E9%83%A8%E7%BD%B2%E5%88%B0-Linux-Web-%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noopener">coding部署到-Linux-Web-服务器</a></li><li><a href="https://help.coding.net/docs/devops/ci/credential.html" target="_blank" rel="noopener">coding在持续集成中使用凭据</a></li><li><a href="https://blog.csdn.net/u012278016/article/details/88575010" target="_blank" rel="noopener">Linux 运行jar包命令</a></li><li><a href="https://www.cnblogs.com/gyjx2016/p/8462929.html" target="_blank" rel="noopener">【springboot】之利用shell脚本优雅启动，关闭springboot服务</a></li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Java" scheme="http://zone.dizent.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>hadoop、hbase、zk伪集群服务单独启动命令</title>
    <link href="http://zone.dizent.cn/2020/02/19/hadoop%E3%80%81hbase%E3%80%81zk%E4%BC%AA%E9%9B%86%E7%BE%A4%E6%9C%8D%E5%8A%A1%E5%8D%95%E7%8B%AC%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://zone.dizent.cn/2020/02/19/hadoop%E3%80%81hbase%E3%80%81zk%E4%BC%AA%E9%9B%86%E7%BE%A4%E6%9C%8D%E5%8A%A1%E5%8D%95%E7%8B%AC%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-02-19T01:58:15.313Z</published>
    <updated>2020-05-09T01:46:44.232Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><table><thead><tr><th style="text-align:center">服务名</th><th>重启命令</th><th>对应服务</th></tr></thead><tbody><tr><td style="text-align:center">SecondaryNameNode</td><td>sh /opt/hadoop/sbin/start-dfs.sh</td><td>hadoop</td></tr><tr><td style="text-align:center">ResourceManager</td><td>sh /opt/hadoop/sbin/start-yarn.sh</td><td>hadoop</td></tr><tr><td style="text-align:center">NameNode</td><td>sh /opt/hadoop/sbin/start-dfs.sh</td><td>hadoop</td></tr><tr><td style="text-align:center">HRegionServer</td><td>sh /opt/hbase/bin/hbase-daemon.sh start regionserver</td><td>hbase</td></tr><tr><td style="text-align:center">HMaster</td><td>sh /opt/hbase/bin/hbase-daemon.sh start master</td><td>hbase</td></tr><tr><td style="text-align:center">QuorumPeerMain</td><td></td><td>zookeeper</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://zone.dizent.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="bigdata" scheme="http://zone.dizent.cn/tags/bigdata/"/>
    
  </entry>
  
  <entry>
    <title>简单实现内网穿透</title>
    <link href="http://zone.dizent.cn/2019/12/16/%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>http://zone.dizent.cn/2019/12/16/%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</id>
    <published>2019-12-16T01:15:00.000Z</published>
    <updated>2020-05-09T01:46:44.232Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="本地实现内网穿透"><a href="#本地实现内网穿透" class="headerlink" title="本地实现内网穿透"></a>本地实现内网穿透</h1><blockquote><ul><li>工具：ngrok</li><li>环境：Mac OS 10.15</li><li>其他工具：nginx</li></ul></blockquote><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><ol><li>使用homebrew安装nginx</li></ol><pre><code class="shell">$ brew install nginx</code></pre><blockquote><p>通过homebrew安装的工具，会保存在<code>/usr/local/etc</code>目录下</p></blockquote><ol start="2"><li>启动nginx</li></ol><pre><code class="shell">$ nginx</code></pre><ol start="3"><li>打开浏览器，输入<code>http://localhost:8080</code>,看到以下界面，表示安装成功。</li></ol><p><img src="https://imgkr.cn-bj.ufileos.com/5554a05c-5260-482b-ada1-915972806a2b.png" alt="nginx"></p><ol start="4"><li>修改nginx配置</li></ol><ul><li>进入nginx目录：</li></ul><pre><code class="shell">$ cd /usr/local/etc/nginx$ vim nginx.conf</code></pre><ul><li>修改nginx.conf文件中的下面部分</li></ul><pre><code class="json">server {    #修改端口号        listen       80;        server_name  localhost;        location / {            #修改根目录            root   /Users/dizent/Documents/themes/Site/Category/;            index  index.html index.htm;        }        ……</code></pre><blockquote><p>我在<code>Users/dizent/Documents/themes/Site/Category</code>目录下放置了一些静态页面，以便调试。</p></blockquote><p><img src="https://imgkr.cn-bj.ufileos.com/ef6911e0-1c2b-4778-93e8-8f087226147e.png" alt="image"></p><ul><li>保存后重新启动</li></ul><pre><code class="shell">$ nginx -s reload</code></pre><ul><li>浏览器打开页面可以看到</li></ul><p><img src="https://imgkr.cn-bj.ufileos.com/ea7db8ef-5beb-4fa9-b047-d5bdc0aa9016.png" alt="页面展示"></p><h2 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h2><blockquote><p>经过上一章的操作，在本地已经可以通过浏览器访问该文件夹下的文件，接下来我们就要操作内网穿透，使用户可以在所有地方都可以访问该网页。</p></blockquote><ol><li>安装ngrok</li></ol><ul><li>进入ngrok官网下载安装包：<a href="https://ngrok.com/download" target="_blank" rel="noopener">https://ngrok.com/download</a></li></ul><p><img src="https://imgkr.cn-bj.ufileos.com/cfb139f5-6c6b-4bb5-a6bb-9a0c52c48abd.png" alt="下载页面"></p><ol start="2"><li>下载之后，打开下载目录，并解压</li></ol><pre><code class="shell">$ unzip /ngrok.zip</code></pre><ol start="3"><li>获取授权</li></ol><ul><li>注册登录ngrok账号</li><li>进入：<a href="https://dashboard.ngrok.com/auth" target="_blank" rel="noopener">https://dashboard.ngrok.com/auth</a></li></ul><p><img src="https://imgkr.cn-bj.ufileos.com/5477076e-f0b0-4df9-b3c1-8a72eccc1f26.png" alt="复制授权码"></p><ul><li>复制授权码，在终端输入命令：<br><code>`</code>shell<br>$ cd [ngrok目录]</li></ul><p>$ ./ngrok authtoken [授权码]</p><pre><code>4. 开启内网穿透```shell$ ./ngrok http 80ngrok by @inconshreveable                                                                                                                                               (Ctrl+C to quit)Session Status                onlineAccount                       Dizent (Plan: Free)Version                       2.3.34Region                        United States (us)Web Interface                 http://127.0.0.1:4040Forwarding                    http://13e89141.ngrok.io -&gt; http://localhost:80Forwarding                    https://13e89141.ngrok.io -&gt; http://localhost:80Connections                   ttl     opn     rt1     rt5     p50     p90                              0       0       0.00    0.00    0.00    0.00</code></pre><blockquote><p>出现以上代码时表明启动成功。</p></blockquote><ol start="5"><li>在任意联网的设备输入上述地址：<a href="http://13e89141.ngrok.io" target="_blank" rel="noopener">http://13e89141.ngrok.io</a></li></ol><p><img src="https://imgkr.cn-bj.ufileos.com/37fff383-e3c0-4044-83a2-5e0c66d0a433.png" alt="电脑展示效果"></p><p><img src="https://imgkr.cn-bj.ufileos.com/24e766f9-e9fc-4da6-b57d-f4d212759b95.png" alt="手机展示效果"></p><ol start="6"><li>使用内网穿透分享文件</li></ol><ul><li>在刚才放置网站的文件夹下，访问任意想分享的文件，例如：</li></ul><p><img src="https://imgkr.cn-bj.ufileos.com/f7a6d926-fa69-479e-9705-835f8a9be6c5.png" alt="文件"></p><ul><li><p>我在根目录下新建了一个<code>/images</code>文件夹，并放置了一张图片，命名为<code>二维码.jpg</code></p></li><li><p>在浏览器输入<code>http://13e89141.ngrok.io/images/二维码.jpg</code></p></li></ul><p><img src="https://imgkr.cn-bj.ufileos.com/0e27ee10-1ac8-4b28-910b-5f7dab279061.png" alt="访问文件"></p><blockquote><p>内网穿透免费版网速较慢，只为可以实现内网资源在外网可以访问，一般只做接口调试使用。<br>如果需要更好的网速体验，请使用公网服务器。或者购买官方的加速服务器。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="技术" scheme="http://zone.dizent.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="网络" scheme="http://zone.dizent.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="ngrok" scheme="http://zone.dizent.cn/tags/ngrok/"/>
    
      <category term="服务器" scheme="http://zone.dizent.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装Hadoop、Hbase、Zookeeper、Phoenix伪集群</title>
    <link href="http://zone.dizent.cn/2019/10/24/Docker%E5%AE%89%E8%A3%85Hadoop%E3%80%81Hbase%E3%80%81Zookeeper%E3%80%81Phoenix%E4%BC%AA%E9%9B%86%E7%BE%A4-1/"/>
    <id>http://zone.dizent.cn/2019/10/24/Docker%E5%AE%89%E8%A3%85Hadoop%E3%80%81Hbase%E3%80%81Zookeeper%E3%80%81Phoenix%E4%BC%AA%E9%9B%86%E7%BE%A4-1/</id>
    <published>2019-10-24T02:13:00.000Z</published>
    <updated>2020-05-09T01:46:44.219Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Docker安装Hadoop、Hbase、Zookeeper、Phoenix伪集群"><a href="#Docker安装Hadoop、Hbase、Zookeeper、Phoenix伪集群" class="headerlink" title="Docker安装Hadoop、Hbase、Zookeeper、Phoenix伪集群"></a>Docker安装Hadoop、Hbase、Zookeeper、Phoenix伪集群</h3><hr><p>准备条件：</p><ul><li>安装docker</li><li>docker容器配置内存8G及以上</li><li>shell命令行或者Mac控制台</li><li>安装Kitematic</li></ul><blockquote><p>Hadoop /Hbase/Zookeeper/phoenix安装环境已经集成在mysaber/hadoop：0.2.2镜像中，简单配置即可。</p></blockquote><h4 id="拉取docker镜像"><a href="#拉取docker镜像" class="headerlink" title="拉取docker镜像"></a>拉取docker镜像</h4><pre><code class="shell">$ docker pull mysaber/hadoop:0.2.2</code></pre><h4 id="使用命令查看docker镜像"><a href="#使用命令查看docker镜像" class="headerlink" title="使用命令查看docker镜像"></a>使用命令查看docker镜像</h4><pre><code class="shell">$  docker imagesREPOSITORY                                      TAG                 IMAGE ID            CREATED             SIZEmysaber/hadoop                                  0.2.2               89e80d91b1a5        3 days ago          4.14GB</code></pre><p>出现对应镜像表示拉取成功。</p><h4 id="配置对应的启动脚本文件“start-container-sh”"><a href="#配置对应的启动脚本文件“start-container-sh”" class="headerlink" title="配置对应的启动脚本文件“start-container.sh”"></a>配置对应的启动脚本文件“start-container.sh”</h4><pre><code class="shell">#!/bin/bash# the default node number is 3N=${1:-3}# start hadoop master container docker rm -f master &amp;&gt; /dev/nullecho &quot;start hadoopmaster container...&quot; docker run -itd \ #-v后两个参数，冒号前，为本地路径，后面用${localPath}代替，冒号后为容器路径，之后用${serverPath}代替        -v ${localPath}:/opt/docker \                --net=hadoop \                -p 50070:50070 \        -p 2181:2181 \                -p 8088:8088 \        -p 8765:8765 \                -p 60010:60010 \        -p 16020:16020 \        -p 16000:16000 \                -e ZOO_MY_ID=1 \                --name master \                --hostname master \                mysaber/hadoop:0.2.2 &amp;&gt; /dev/null# start hadoop slave containeri=1while [ $i -lt $N ]do    docker rm -f slave$i &amp;&gt; /dev/null    echo &quot;start hadoop-slave$i container...&quot;    docker run -itd \    -v ${localPath}:/opt/docker \                    --net=hadoop \            -p $((2181+$i)):2181 \                    --name slave$i \                    --hostname slave$i \                    -e ZOO_MY_ID=$(($i+1)) \                    mysaber/hadoop:0.2.2 &amp;&gt; /dev/null    i=$(( $i + 1 ))done # get into hadoop master container#docker exec -it master bash</code></pre><p>脚本将会启动三个容器，一个master、两个slave（slave1、slave2)</p><h4 id="使用Kitematic查看已经启动的镜像容器，选中master。点击exec可以进入容器内部。"><a href="#使用Kitematic查看已经启动的镜像容器，选中master。点击exec可以进入容器内部。" class="headerlink" title="使用Kitematic查看已经启动的镜像容器，选中master。点击exec可以进入容器内部。"></a>使用Kitematic查看已经启动的镜像容器，选中master。点击exec可以进入容器内部。</h4><p><img src="https://cdn.jsdelivr.net/gh/dizent/dizent.github.io@1.1/images/kitematic.png" alt="image-20191024093325950"></p><blockquote><p>如果没有安装Kitematic，则可以使用下面命令登陆容器内部：</p><pre><code class="shell">$ docker ps -aCONTAINER ID        IMAGE                  COMMAND             CREATED             STATUS              PORTS                                                                                                                                                                                      NAMES2c6e954fd7a0        mysaber/hadoop:0.2.2   &quot;/bin/bash&quot;         37 minutes ago      Up 37 minutes       8081/tcp, 8088/tcp, 8765/tcp, 50070/tcp, 60010/tcp, 0.0.0.0:2183-&gt;2181/tcp                                                                                                                 slave288deb95f7195        mysaber/hadoop:0.2.2   &quot;/bin/bash&quot;         37 minutes ago      Up 37 minutes       8081/tcp, 8088/tcp, 8765/tcp, 50070/tcp, 60010/tcp, 0.0.0.0:2182-&gt;2181/tcp                                                                                                                 slave1cd06942e2c58        mysaber/hadoop:0.2.2   &quot;/bin/bash&quot;         37 minutes ago      Up 37 minutes       0.0.0.0:2181-&gt;2181/tcp, 0.0.0.0:8088-&gt;8088/tcp, 0.0.0.0:8765-&gt;8765/tcp, 0.0.0.0:16000-&gt;16000/tcp, 0.0.0.0:16020-&gt;16020/tcp, 0.0.0.0:50070-&gt;50070/tcp, 0.0.0.0:60010-&gt;60010/tcp, 8081/tcp   master</code></pre><p>查看容器对应的container id</p><pre><code class="shell">$ docker exec -it cd06942e2c58 /bin/bash[root@master /]# </code></pre><p>出现以上结果表明正确进入容器内部。</p></blockquote><h4 id="在master容器中，修改hbase配置文件："><a href="#在master容器中，修改hbase配置文件：" class="headerlink" title="在master容器中，修改hbase配置文件："></a>在master容器中，修改hbase配置文件：</h4><pre><code class="shell">[root@master /]# vim  /opt/hbase/conf/hbase-site.xml</code></pre><p>在其中加入下面配置：(在标签<code>&lt;configuration&gt;&lt;/configuration&gt;</code>中，与其他property同级)</p><pre><code class="xml">&lt;property&gt;        &lt;name&gt;fs.default.name&lt;/name&gt;        &lt;value&gt;hdfs://master:9000&lt;/value&gt;&lt;/property&gt;</code></pre><p>在${localPath}新建编辑脚本文件<code>start-all.sh</code>：（或在/opt/docker目录下执行 vim start-all.sh)</p><pre><code class="shell">#!/bin/bashecho &quot;开始启动master。。。&quot;sh /opt/hadoop/sbin/stop-all.shwaitsh /opt/hadoop/bin/hadoop namenode -formatwaitsh /opt/hadoop/sbin/start-all.shwaitsh /opt/hadoop/bin/hdfs dfsadmin -safemode leavewaitsh /opt/zookeeper/bin/zkServer.sh startwaitecho &quot;master的hadoop和zookeeper启动完成！&quot;ssh root@slave1 &gt; /dev/null 2&gt;&amp;1 &lt;&lt; eeooffecho &quot;2&quot; &gt; &quot;/opt/zookeeper/zkdata/myid&quot;cat /opt/zookeeper/zkdata/myidwaitsh /opt/zookeeper/bin/zkServer.sh startwaitexiteeooffecho &quot;slave1的zookeeper启动完成！&quot;ssh root@slave2 &gt; /dev/null 2&gt;&amp;1 &lt;&lt; eeooffwecho &quot;3&quot; &gt; &quot;/opt/zookeeper/zkdata/myid&quot;cat /opt/zookeeper/zkdata/myidwaitsh /opt/zookeeper/bin/zkServer.sh startwaitexiteeooffwecho &quot;slave2的zookeeper启动完成！&quot;sh /opt/hbase/bin/start-hbase.shwaitecho &quot;hbase启动完成！&quot;sh /opt/hbase/bin/hbase shell</code></pre><p>切换到master容器，执行命令：</p><pre><code class="shell">sh-4.2# cd /opt/docker/sh-4.2# sh start-all.sh......hbase启动完成！2019-10-24 01:13:29,343 WARN  [main] util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableHBase ShellUse &quot;help&quot; to get list of supported commands.Use &quot;exit&quot; to quit this interactive shell.Version 2.0.0, r7483b111e4da77adbfc8062b3b22cbe7c2cb91c1, Sun Apr 22 20:26:55 PDT 2018Took 0.0032 secondshbase(main):001:0&gt;</code></pre><p>出现以上结果，表示hadoop、zookeeper、hbase集群已经启动完成。可以再hbase中进行验证：</p><pre><code class="shell">hbase(main):001:0&gt; listTABLE0 row(s)Took 0.6531 seconds=&gt; []hbase(main):002:0&gt; create &#39;user&#39;,&#39;info&#39;Created table userTook 0.9004 seconds=&gt; Hbase::Table - user</code></pre><p>成功执行以上两条命令，表明hbase的查询和创建表都是正常的，如果出现问题的话，可以查看/opt/hbase/logs/中对应的log文件抛出的异常来进行排查。</p><blockquote><p>从服务列表中排查是否出错：在master中通过命令查询当前容器启动的服务列表：</p><pre><code class="shell">## 执行jps命令sh-4.2# jps896 SecondaryNameNode————hadoop的secondaryNameNode服务1507 HMaster————hbase的Hmaster服务1379 QuorumPeerMain————zookeeper服务1062 ResourceManager————hadoop的ResourceManager服务1611 HRegionServer————hbase的HRegionServer服务652 NameNode————hadoop的NameNode服务2094 Jps</code></pre><p>如果上述6个服务都启动成功，表明master中的服务正常。切换到slave中继续查看</p><pre><code class="shell">## 切换到slave1容器，可同理切换到slave2容器sh-4.2# ssh slave1Last login: Tue Oct  8 09:22:02 2019 from master## 执行jps命令[root@slave1 ~]# jps480 HRegionServer————hbase的HRegionServer服务130 DataNode————hadoop的DataNode服务402 QuorumPeerMain————zookeeper服务245 NodeManager————hadoop的NodeManager服务856 Jps</code></pre><p>slave1和slave2中的服务应该相同，如果出现缺少某服务的情况，可在对应容器中，cd到对应服务的目录下/opt/hadoop|hbase|zookeeper的logs目录中查看对应服务的启动运行日志。</p></blockquote><h4 id="配置Phoenix"><a href="#配置Phoenix" class="headerlink" title="配置Phoenix"></a>配置Phoenix</h4><p>切换到master容器，进入phoenix目录：</p><pre><code class="shell">[root@slave1 ~]# ssh masterLast login: Tue Oct  8 09:22:02 2019 from master[root@master ~]# cd /opt/phoenix/bin/[root@master bin]#</code></pre><p>启动phoenix的queryserver：</p><pre><code class="shell">[root@master bin]# ./queryserver.py startstarting Query Server, logging to /tmp/phoenix/phoenix-root-queryserver.log## 检查queryserver是否已经启动[root@master bin]# jps896 SecondaryNameNode2624 Jps1507 HMaster1379 QuorumPeerMain2596 QueryServer————phoenix的queryserver服务1062 ResourceManager1611 HRegionServer652 NameNode</code></pre><h4 id="phoenix命令行"><a href="#phoenix命令行" class="headerlink" title="phoenix命令行"></a>phoenix命令行</h4><p>phoenix也提供了一个类似于MySQL的命令行的工具，在phoenix的bin目录下执行：</p><pre><code class="shell">[root@master bin]# ./sqlline.pySetting property: [incremental, false]Setting property: [isolation, TRANSACTION_READ_COMMITTED]issuing: !connect jdbc:phoenix: none none org.apache.phoenix.jdbc.PhoenixDriverConnecting to jdbc:phoenix:SLF4J: Class path contains multiple SLF4J bindings.SLF4J: Found binding in [jar:file:/opt/phoenix/phoenix-5.0.0-HBase-2.0-client.jar!/org/slf4j/impl/StaticLoggerBinder.class]SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.19/10/24 02:31:53 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableConnected to: Phoenix (version 5.0)Driver: PhoenixEmbeddedDriver (version 5.0)Autocommit status: trueTransaction isolation: TRANSACTION_READ_COMMITTEDBuilding list of tables and columns for tab-completion (set fastconnect to true to skip)...133/133 (100%) DoneDonesqlline version 1.2.00: jdbc:phoenix:&gt;</code></pre><p>出现上述结果表示成功进入phoenix，可以尝试执行创建表格（创建表格注意事项，在下方有提及）</p><pre><code class="shell">0: jdbc:phoenix:&gt; create table visit_details (        inc_id varchar(32) not null,        area_code varchar(32)  ,        area_name varchar(32)  ,        department_code varchar(32)  ,        department_name varchar(32)  ,        visit_type tinyint default 0  ,        patient_code varchar(32) not null  ,        address varchar(128)   ,        address_split varchar(128) ,        address_province varchar(32) ,        address_city varchar(32)   ,        address_district varchar(32)  ,        address_town varchar(32)  ,        address_street varchar(128) ,        gender tinyint default 0 ,        age integer ,        visit_at timestamp ,        operate_at timestamp ,        created_at timestamp not null ,        updated_at timestamp not null   CONSTRAINT PK PRIMARY KEY (inc_id, patient_code, created_at, updated_at) );</code></pre><p>phoenix的表格默认为全局索引，在本docker镜像中已经配置了对应的耳机索引，可通过下方命令创建索引：</p><pre><code class="shell">0: jdbc:phoenix:&gt; create index op_index on visit_details(operate_at);No rows affected (5.957 seconds)</code></pre><p>通过!table命令查看表格以及索引：</p><pre><code class="shell">0: jdbc:phoenix:&gt; !table+------------+--------------+----------------+---------------+----------+------------+----------------------------+-----------------+--------------+-----------------+---------------+---------------+-----------------+------------+-------------+----------------+--+| TABLE_CAT  | TABLE_SCHEM  |   TABLE_NAME   |  TABLE_TYPE   | REMARKS  | TYPE_NAME  | SELF_REFERENCING_COL_NAME  | REF_GENERATION  | INDEX_STATE  | IMMUTABLE_ROWS  | SALT_BUCKETS  | MULTI_TENANT  | VIEW_STATEMENT  | VIEW_TYPE  | INDEX_TYPE  | TRANSACTIONAL  |  |+------------+--------------+----------------+---------------+----------+------------+----------------------------+-----------------+--------------+-----------------+---------------+---------------+-----------------+------------+-------------+----------------+--+|            |              | OP_INDEX       | INDEX         |          |            |                            |                 | ACTIVE       | false           | null          | false         |                 |            | GLOBAL      | false          |  ||            | SYSTEM       | CATALOG        | SYSTEM TABLE  |          |            |                            |                 |              | false           | null          | false         |                 |            |             | false          |  ||            | SYSTEM       | FUNCTION       | SYSTEM TABLE  |          |            |                            |                 |              | false           | null          | false         |                 |            |             | false          |  ||            | SYSTEM       | LOG            | SYSTEM TABLE  |          |            |                            |                 |              | true            | 32            | false         |                 |            |             | false          |  ||            | SYSTEM       | SEQUENCE       | SYSTEM TABLE  |          |            |                            |                 |              | false           | null          | false         |                 |            |             | false          |  ||            | SYSTEM       | STATS          | SYSTEM TABLE  |          |            |                            |                 |              | false           | null          | false         |                 |            |             | false          |  ||            |              | VISIT_DETAILS  | TABLE         |          |            |                            |                 |              | false           | null          | false         |                 |            |             | false          |  |+------------+--------------+----------------+---------------+----------+------------+----------------------------+-----------------+--------------+-----------------+---------------+---------------+-----------------+------------+-------------+----------------+--+</code></pre><p>接下来使用dataX将MySQL数据导入phoenix，接下来使用dataX将MySQL数据导入phoenix，phoenix的使用注意事项，可以查看：<a href="http://www.dizent.cn/2019/10/16/Phoenix/" target="_blank" rel="noopener">使用DATAX将MySQL导入Phoenix</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://zone.dizent.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="bigdata" scheme="http://zone.dizent.cn/tags/bigdata/"/>
    
  </entry>
  
  <entry>
    <title>使用DATAX将MySQL导入Phoenix</title>
    <link href="http://zone.dizent.cn/2019/10/16/Phoenix/"/>
    <id>http://zone.dizent.cn/2019/10/16/Phoenix/</id>
    <published>2019-10-16T01:07:00.000Z</published>
    <updated>2020-05-09T01:46:44.219Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="使用DATAX将MySQL导入Phoenix"><a href="#使用DATAX将MySQL导入Phoenix" class="headerlink" title="使用DATAX将MySQL导入Phoenix"></a>使用DATAX将MySQL导入Phoenix</h2><h3 id="安装Hadoop、Zookeeper、Hbase-2-X、Phoenix-5-X"><a href="#安装Hadoop、Zookeeper、Hbase-2-X、Phoenix-5-X" class="headerlink" title="安装Hadoop、Zookeeper、Hbase 2.X、Phoenix 5.X"></a>安装Hadoop、Zookeeper、Hbase 2.X、Phoenix 5.X</h3><pre><code class="shell">$ docker pull mysaber/hadoop 0.1.5</code></pre><h3 id="配置Phoenix-5-X"><a href="#配置Phoenix-5-X" class="headerlink" title="配置Phoenix 5.X"></a>配置Phoenix 5.X</h3><pre><code class="shell">//复制hbase配置到phoenix$ cp {HBase_Home}/conf/hbase-site.xml {phoenix_home}/bin///拷贝phoenix下的把 phoenix-&lt;version&gt;-server.jar、phoenix-core-&lt;version&gt;.jar 拷贝到hbaseServer的lib目录下{Hbase_Home}/lib</code></pre><h3 id="下载DataX源码并进行编译"><a href="#下载DataX源码并进行编译" class="headerlink" title="下载DataX源码并进行编译"></a>下载DataX源码并进行编译</h3><pre><code class="shell">$ git clone https://github.com/alibaba/DataX.git</code></pre><h3 id="在Phoenix中创建与MySQL相对应的table"><a href="#在Phoenix中创建与MySQL相对应的table" class="headerlink" title="在Phoenix中创建与MySQL相对应的table"></a>在Phoenix中创建与MySQL相对应的table</h3><p>Phoenix的数据类型,注意修改MySQL表中数据到对应数据类型，另外not null需要与primary key联合使用</p><ul><li>INTEGER</li><li>UNSIGNED_INT</li><li>BIGINT</li><li>UNSIGNED_LONG</li><li>TINYINT</li><li>UNSIGNED_TINYINT</li><li>SMALLINT</li><li>UNSIGNED_SMALLINT</li><li>FLOAT</li><li>UNSIGNED_FLOAT</li><li>DOUBLE</li><li>UNSIGNED_DOUBLE</li><li>DECIMAL</li><li>BOOLEAN</li><li>TIME</li><li>DATE</li><li>TIMESTAMP</li><li>UNSIGNED_TIME</li><li>UNSIGNED_DATE</li><li>UNSIGNED_TIMESTAMP</li><li>VARCHAR</li><li>CHAR</li><li>BINARY</li><li>VARBINARY</li><li>ARRAY</li></ul><p>例如驾驶舱中的visit_details可修改为：</p><pre><code class="mssql">create table visit_details (        inc_id varchar(32) not null,        area_code varchar(32)  ,        area_name varchar(32)  ,        department_code varchar(32)  ,        department_name varchar(32)  ,        visit_type tinyint default 0  ,        patient_code varchar(32) not null  ,        address varchar(128)   ,        address_split varchar(128) ,        address_province varchar(32) ,        address_city varchar(32)   ,        address_district varchar(32)  ,        address_town varchar(32)  ,        address_street varchar(128) ,        gender tinyint default 0 ,        age integer ,        visit_at timestamp ,        operate_at timestamp ,        created_at timestamp not null ,        updated_at timestamp not null   CONSTRAINT PK PRIMARY KEY (inc_id, patient_code, created_at, updated_at) );</code></pre><p>插入语句示例：</p><pre><code class="mssql">UPSERT INTO visit_details(inc_id, area_code, area_name, department_code, department_name, visit_type, patient_code, address, address_split, address_province, address_city, address_district, address_town, address_street, gender, age, visit_at, operate_at, created_at, updated_at) VALUES (&#39;0000011ccc654b518edbce2b3e58afa2&#39;, &#39;9&#39;, &#39;江南分院&#39;, &#39;0204&#39;, &#39;江南急诊科&#39;, 1, &#39;1000003834429&#39;, &#39;重庆市万州区石峰路999号&#39;, &#39;重庆市-万州区-石峰路999号&#39;, &#39;重庆市&#39;, NULL, &#39;万州区&#39;, NULL, &#39;石峰路999号&#39;, 1, 3, &#39;2019-02-10 22:43:11&#39;, &#39;2019-02-10 20:29:19&#39;, &#39;2019-08-01 00:39:43&#39;, &#39;2019-08-01 00:39:43&#39;);</code></pre><blockquote><p>Datax源码编译（源码plugins太多，可以将主目录下pom.xml文件中的不需要的module注释掉）</p><pre><code class="shell">$ cd  {DataX_source_code_home}$ mvn -U clean package assembly:assembly -Dmaven.test.skip=true</code></pre></blockquote><p>在编译的目录下，进入target目录，可以找到编译后的datax。</p><blockquote><p>Phoenix开启QueryServer;服务器需要开启8765端口，docker则需要开放并映射8765端口</p><pre><code class="shell">$ cd {Phoenix_Home}/bin$ ./queryServer.py start</code></pre></blockquote><p>编辑DataX的Job文件：</p><ol><li><p>新建一个json文件：mysql2phoenix.json</p><pre><code class="json">{  job:{    &quot;content&quot;:[        {            &quot;reader&quot;:$Reader_Object,            &quot;writer&quot;:$Writer_Object        }    ],    &quot;setting&quot;:{        &quot;speed&quot;:{            &quot;byte&quot;:1048576,      //同时开启的进程数            &quot;channel&quot;:16,      //分片的记录条数            &quot;record&quot;:10000        }    }}}</code></pre><p>Reader Object</p></li></ol><pre><code class="json">            {        //name为datax的plugin目录下的插件名        &quot;name&quot;:&quot;mysqlreader&quot;,         //paramter为插件所需要的参数，各插件各不相同                &quot;parameter&quot;:{                    &quot;connection&quot;:[                        {                              //mysql连接地址，可配多个                            &quot;jdbcUrl&quot;:[                                &quot;jdbc:mysql://localhost:3306/odc_v2&quot;                            ],                              //mysql查询SQL语句，列名顺序和列数需要和writer中的相同                            &quot;querySql&quot;:[                                &quot;select * from visit_details;&quot;                            ]                        }                    ],                    &quot;password&quot;:&quot;******&quot;,                    &quot;username&quot;:&quot;root&quot;                }</code></pre><p>Writer_Object</p><pre><code class="json">{                  //write的插件名                &quot;name&quot;:&quot;hbase20xsqlwriter&quot;,                &quot;parameter&quot;:{                      //单次提交的条数                    &quot;batchSize&quot;:&quot;100&quot;,                    &quot;column&quot;:[                        &quot;INC_ID&quot;,                        &quot;AREA_CODE&quot;,                        &quot;AREA_NAME&quot;,                        &quot;DEPARTMENT_CODE&quot;,                        &quot;DEPARTMENT_NAME&quot;,                        &quot;VISIT_TYPE&quot;,                        &quot;PATIENT_CODE&quot;,                        &quot;ADDRESS&quot;,                        &quot;ADDRESS_SPLIT&quot;,                        &quot;ADDRESS_PROVINCE&quot;,                        &quot;ADDRESS_CITY&quot;,                        &quot;ADDRESS_DISTRICT&quot;,                        &quot;ADDRESS_TOWN&quot;,                        &quot;ADDRESS_STREET&quot;,                        &quot;GENDER&quot;,                        &quot;AGE&quot;,                        &quot;VISIT_AT&quot;,                        &quot;OPERATE_AT&quot;,                        &quot;CREATED_AT&quot;,                        &quot;UPDATED_AT&quot;                    ],                      //空值处理策略，有skip和set null                    &quot;nullMode&quot;:&quot;skip&quot;,                      //服务地址                    &quot;queryServerAddress&quot;:&quot;http://server-Ip:8765&quot;,                    //写入表                      &quot;table&quot;:&quot;VISIT_DETAILS&quot;                }            }</code></pre><h3 id="运行DataX"><a href="#运行DataX" class="headerlink" title="运行DataX"></a>运行DataX</h3><pre><code class="python">$ cd {DataX_Home}/bin$ python datax.py {Your_Job_Path}/mysql2phoenix.json</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="中间件" scheme="http://zone.dizent.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    
      <category term="bigdata" scheme="http://zone.dizent.cn/tags/bigdata/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-Theme-Sakura</title>
    <link href="http://zone.dizent.cn/2018/12/12/Hexo-Theme-Sakura/"/>
    <id>http://zone.dizent.cn/2018/12/12/Hexo-Theme-Sakura/</id>
    <published>2018-12-12T14:16:01.000Z</published>
    <updated>2020-04-30T06:34:12.751Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>hexo-theme-sakura主题 <a href="https://github.com/honjun/hexo-theme-sakura/blob/master/README.md" target="_blank" rel="noopener">English document</a></p><p>基于WordPress主题<a href="https://github.com/mashirozx/Sakura/" target="_blank" rel="noopener">Sakura</a>修改成Hexo的主题。</p><p><a href="https://sakura.hojun.cn" target="_blank" rel="noopener">demo预览</a></p><p>正在开发中……</p><p><img src="https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg" alt=""></p><h2 id="交流群"><a href="#交流群" class="headerlink" title="交流群"></a>交流群</h2><p>若你是使用者，加群QQ: 801511924</p><p>若你是创作者，加群QQ: 194472590</p><h2 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h2><ul><li>首页大屏视频</li><li>首页随机封面</li><li>图片懒加载</li><li>valine评论</li><li>fancy-box相册</li><li>pjax支持，音乐不间断</li><li>aplayer音乐播放器</li><li>多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了）</li></ul><h2 id="赞赏作者"><a href="#赞赏作者" class="headerlink" title="赞赏作者"></a>赞赏作者</h2><p>如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！</p><p><a href="https://www.paypal.me/hojuncn" target="_blank" rel="noopener">paypal</a> | <a href="https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/AliPayQR.jpg" target="_blank" rel="noopener">Alipay 支付宝</a> | <a href="https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/WeChanSQ.jpg" target="_blank" rel="noopener">WeChat Pay 微信支付</a></p><h2 id="未完善的使用教程"><a href="#未完善的使用教程" class="headerlink" title="未完善的使用教程"></a>未完善的使用教程</h2><p>那啥？老实说我目前也不是很有条理233333333~</p><h2 id="1、主题下载安装"><a href="#1、主题下载安装" class="headerlink" title="1、主题下载安装"></a>1、主题下载安装</h2><p><a href="https://github.com/honjun/hexo-theme-sakura" target="_blank" rel="noopener">hexo-theme-sakura</a>建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。</p><p>下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行<code>npm i</code>安装依赖。</p><h2 id="2、主题配置"><a href="#2、主题配置" class="headerlink" title="2、主题配置"></a>2、主题配置</h2><h3 id="博客根目录下的-config配置"><a href="#博客根目录下的-config配置" class="headerlink" title="博客根目录下的_config配置"></a>博客根目录下的_config配置</h3><p>站点</p><pre><code class="yml"># Sitetitle: 你的站点名subtitle:description: 站点简介keywords:author: 作者名language: zh-cntimezone:</code></pre><p>部署</p><pre><code class="yml">deploy:  type: git  repo:     github: 你的github仓库地址    # coding: 你的coding仓库地址  branch: master</code></pre><p>备份 （使用hexo b发布备份到远程仓库）</p><pre><code class="yml">backup:  type: git  message: backup my blog of https://honjun.github.io/  repository:    # 你的github仓库地址,备份分支名  （建议新建backup分支）    github: https://github.com/honjun/honjun.github.io.git,backup    # coding: https://git.coding.net/hojun/hojun.git,backup</code></pre><h3 id="主题目录下的-config配置"><a href="#主题目录下的-config配置" class="headerlink" title="主题目录下的_config配置"></a>主题目录下的_config配置</h3><p>其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分</p><pre><code class="yml"># site name# 站点名 【改】prefixName: さくら荘そのsiteName: hojun# favicon and site master avatar# 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】favicon: /images/favicon.icoavatar: /img/custom/avatar.jpg# 站点url 【改】url: https://sakura.hojun.cn# 站点介绍（或者说是个人签名）【改】description: Live your life with passion! With some drive!# 站点cdn，没有就为空 【改】  若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpgcdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6# 开启pjax 【选】pjax: 1# 站点首页的公告信息 【改】notice: hexo-Sakura主题已经开源，目前正在开发中...# 懒加载的加载中图片 【选】lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg# 站点菜单配置 【选】menus:  首页: { path: /, fa: fa-fort-awesome faa-shake }  归档: { path: /archives, fa: fa-archive faa-shake, submenus: {     技术: {path: /categories/技术/, fa: fa-code },     生活: {path: /categories/生活/, fa: fa-file-text-o },     资源: {path: /categories/资源/, fa: fa-cloud-download },     随想: {path: /categories/随想/, fa: fa-commenting-o },    转载: {path: /categories/转载/, fa: fa-book }  } }  清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: {     书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce },     番组: {path: /bangumi/, fa: fa-film faa-vertical },     歌单: {path: /music/, fa: fa-headphones },    图集: {path: /tags/图集/, fa: fa-photo }  } }  留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada }  友人帐: { path: /links/, fa: fa-link faa-shake }  赞赏: { path: /donate/, fa: fa-heart faa-pulse }  关于: { path: /, fa: fa-leaf faa-wrench , submenus: {     我？: {path: /about/, fa: fa-meetup},     主题: {path: /theme-sakura/, fa: iconfont icon-sakura },    Lab: {path: /lab/, fa: fa-cogs },  } }  客户端: { path: /client/, fa: fa-android faa-vertical }  RSS: { path: /atom.xml, fa: fa-rss faa-pulse }# Home page sort type: -1: newer first，1: older first. 【非】homePageSortType: -1# Home page article shown number) 【非】homeArticleShown: 10# 背景图片 【选】bgn: 8# startdash面板 url, title, desc img 【改】startdash:   - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png}  - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg}  - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg}# your site build time or founded date# 你的站点建立日期 【改】siteBuildingTime: 07/17/2018# 社交按钮(social)  url, img PC端配置 【改】social:  github: {url: http://github.com/honjun, img: /img/social/github.png}  sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png}  wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png}  zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png}  email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg}  wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png}# 社交按钮(msocial)  url, img 移动端配置 【改】msocial:  github: {url: http://github.com/honjun, fa: fa-github, color: 333}  weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39}  qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe}# 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】donate:  alipay: /img/custom/donate/AliPayQR.jpg  wechat: /img/custom/donate/WeChanQR.jpg  wechatSQ: /img/custom/donate/WeChanSQ.jpg# 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】movies:  url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2  # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用  name: Unbroken.mp4# 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】aplayer:   id: 2660651585  server: netease  type: playlist  fixed: true  mini: false  autoplay: false  loop: all  order: random  preload: auto  volume: 0.7  mutex: true# Valine评论配置【改】valine: truev_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHszv_appKey: mgOpfzbkHYqU92CV4IDlAUHQ</code></pre><h2 id="分类页和标签页配置"><a href="#分类页和标签页配置" class="headerlink" title="分类页和标签页配置"></a>分类页和标签页配置</h2><h3 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h3><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b0gucy9j31060jih76.jpg" alt=""></p><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p><img src="https://wx2.sinaimg.cn/large/006bYVyvly1g07azb2399j31040jgazs.jpg" alt=""></p><p>配置项在\themes\Sakura\languages\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。</p><pre><code class="yml">#category# 按分类名创建技术:    #中文标题    zh: 野生技术协会     # 英文标题    en: Geek – Only for Love    # 封面图片    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg生活:    zh: 生活    en: live    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg#tag# 标签名即是标题悦读:    # 封面图片    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg</code></pre><h2 id="单页面封面配置"><a href="#单页面封面配置" class="headerlink" title="单页面封面配置"></a>单页面封面配置</h2><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b1pi619j31080jge4u.jpg" alt=""><br>如留言板页面页面，位于source下的comment下，打开index.md如下：</p><pre><code class="md">---title: commentdate: 2018-12-20 23:13:48keywords: 留言板description: comments: true# 在这里配置单页面头部图片，自定义替换哦~photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg---</code></pre><h2 id="单页面配置"><a href="#单页面配置" class="headerlink" title="单页面配置"></a>单页面配置</h2><h3 id="番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"><a href="#番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）" class="headerlink" title="番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"></a>番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src="https://wx2.sinaimg.cn/large/006bYVyvly1g07b2gyx60j31090jjahj.jpg" alt=""></p><pre><code class="yml">---layout: bangumititle: bangumicomments: falsedate: 2019-02-10 21:32:48keywords:description:bangumis:  # 番组图片  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg  # 番组名    title: 朝花夕誓——于离别之朝束起约定之花  # 追番状态 （追番ing/已追完）    status: 已追完  # 追番进度    progress: 100  # 番剧日文名称    jp: さよならの朝に約束の花をかざろう  # 放送时间    time: 放送时间: 2018-02-24 SUN.  # 番剧介绍    desc:  住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg    title: 朝花夕誓——于离别之朝束起约定之花    status: 已追完    progress: 50    jp: さよならの朝に約束の花をかざろう    time: 放送时间: 2018-02-24 SUN.    desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。---</code></pre><h3 id="友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"><a href="#友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）" class="headerlink" title="友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"></a>友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b39tleej31080jhjv1.jpg" alt=""></p><pre><code class="yml">---layout: linkstitle: links# 创建日期，可以改下date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改keywords: 友人帐 description: # true/false 开启/关闭评论comments: true # 页面头部图片，自定义修改photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置links:   # 类型分组  - group: 个人项目    # 类型简介    desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt;    items:    # 友链链接    - url: https://shino.cc/fgvf    # 友链头像      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg    # 友链站点名      name: Google    # 友链介绍  下面雷同      desc: Google 镜像    - url: https://shino.cc/fgvf      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg      name: Google      desc: Google 镜像  # 类型分组...  - group: 小伙伴们    desc: 欢迎交换友链 ꉂ(ˊᗜˋ)    items:    - url: https://shino.cc/fgvf      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg      name: Google      desc: Google 镜像    - url: https://shino.cc/fgvf      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg      name: Google      desc: Google 镜像---</code></pre><h2 id="写文章配置"><a href="#写文章配置" class="headerlink" title="写文章配置"></a>写文章配置</h2><p>主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下：</p><pre><code class="md">{% bili video_id [page] %}</code></pre><p>详细使用教程详见<a href="https://github.com/honjun/hexo-tag-bili/blob/master/README-zh_cn.md" target="_blank" rel="noopener">hexo-tag-bili</a>。</p><p>hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下：</p><pre><code class="md">{% fb_img src [caption] %}</code></pre><p>详细使用教程详见<a href="https://github.com/honjun/hexo-tag-fancybox_img/blob/master/README-zh_cn.md" target="_blank" rel="noopener">hexo-tag-fancybox_img</a></p><h2 id="还有啥，一时想不起来……"><a href="#还有啥，一时想不起来……" class="headerlink" title="还有啥，一时想不起来……"></a>还有啥，一时想不起来……</h2><p>To be continued…</p>]]></content>
    
    <summary type="html">
    
      hexo-sakura主题使用教程
    
    </summary>
    
    
      <category term="技术" scheme="http://zone.dizent.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="web" scheme="http://zone.dizent.cn/tags/web/"/>
    
      <category term="悦读" scheme="http://zone.dizent.cn/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
</feed>
